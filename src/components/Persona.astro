---
interface Props {
  title: string;
  img: any;
  description: string;
  examples: Array<string>;
}

const { title, img, description, examples } = Astro.props;
---

<div class="persona" role="listitem" style={`background-image: url(${img.src});`}>
  <h2 class="subheading">{title}</h2>
  <p class="description">{description}</p>
  <div class="examples" role="list">
    {examples.map((e) => <p role="listitem">{e}</p>)}
    <p role="listitem">& more...</p>
  </div>
</div>

<style>
  .persona {
    display: grid;
    gap: 1rem;
    grid-template-rows: auto auto 1fr;
    grid-template-columns: 14rem 1fr;
    padding: 1rem;
    align-items: flex-start;
    border-radius: 2rem;
    overflow: hidden;
    color: var(--white);
    position: relative;
    isolation: isolate;
    background-repeat: no-repeat;
    background-position: center;
    background-size: cover;
  }

  .persona::before {
    --_background-offset: 100%;
    content: " ";
    background: linear-gradient(90deg, var(--primary-text), transparent var(--_background-offset));
    position: absolute;
    inset: 0;
    z-index: -1;
  }

  .bg-image {
    grid-row: 1 / -1;
    grid-column: 1 / -1;
  }

  .subheading {
    grid-row: 1 / 2;
    grid-column: 1 / 2;
    text-transform: uppercase;
    font-size: 1rem;
  }
  
  .description {
    grid-row: 2 / 3;
    grid-column: 1 / 2;
    font-size: 1.5rem;
    font-weight: 600;
  }
  
  .examples {
    grid-row: 3 / -1;
    grid-column: 1;
    color: var(--primary);
    font-size: 1rem;
    font-weight: 500;
    display: flex;
    flex-direction: column;
    gap: 0.75rem;
  }

  .examples > p {
    border: 2px solid var(--primary);
    border-radius: 100rem;
    padding: 0.25rem 1rem;
    width: fit-content;
    background-color: var(--white);
    color: var(--primary);
  }

  @media screen and (min-width: 66rem) {
    .persona {
      grid-template-rows: auto auto 1fr;
      padding: 2rem;
    }
    .persona::before {
      --_background-offset: 50%;
    }
  }
</style>
