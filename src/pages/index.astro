---
import { getCollection } from "astro:content";

import MainLayout from "../layouts/main.astro";
import Signup from "../components/Signup.astro";
import Persona from "../components/Persona.astro";
import HowItWorks from "../components/HowItWorks.astro";
import AboutTheTeam from "../components/AboutTheTeam.astro";

const types = await getCollection("personas");
const personas = types.sort((a) => (a.data.type === "host" ? -1 : 1));
---

<MainLayout>
  <section class="intro-cta">
    <div class="intro" transition:animate="slide">
      <p class="coming-soon">Coming Soon!</p>
      <h1 class="title">Event planning made simple!</h1>
      <p class="description">
        From intimate gatherings to large soirees, all managed seemlessly with
        EMU.
      </p>
    </div>
    <div class="cta">
      <Signup />
    </div>
  </section>
  <section class="types" role="list">
    {
      personas.map((p) => (
        <Persona
          title={p.data.title}
          description={p.data.description}
          img={p.data.image}
          examples={p.data.examples}
          type={p.data.type}
        />
      ))
    }
  </section>
  <HowItWorks />
  <section>
    <AboutTheTeam />
  </section>
</MainLayout>
<style>
  .intro-cta {
    display: grid;
    row-gap: 3rem;
    grid-column: lgutter / rgutter;
    grid-template-areas: var(--main-grid-template-areas);
    grid-template-columns: var(--main-grid-template-cols);
  }

  .intro {
    display: flex;
    flex-direction: column;
    grid-column: main;
    row-gap: 1.5rem;
  }

  .cta {
    grid-column: lgutter / rgutter;
    align-self: flex-end;
  }

  .title {
    font-family: var(--alt-font-family);
  }

  .description {
    font-family: var(--secondary-font-family);
  }

  @media screen and (max-width: calc(70rem - 1px)) {
    .cta {
      background-color: var(--primary-text);
      color: var(--white);
      padding-block: 4rem;
      display: grid;
      grid-template-areas: var(--main-grid-template-areas);
      grid-template-columns: var(--main-grid-template-cols);
    }

    :global(.cta > *) {
      grid-column: main;
    }
  }

  @media screen and (min-width: 70rem) {
    .intro-cta {
      grid-column: main;
      grid-template-columns: 1fr 1fr;
      grid-template-areas: none;
      row-gap: 2rem;
      column-gap: 6rem;
      align-self: flex-end;
    }

    .intro {
      grid-column: unset;
    }

    .cta {
      grid-column: unset;
      border: 1px solid rgb(207, 180, 212);
      padding: 3rem 2.5rem;
      border-radius: 2rem;
    }
  }

  .title {
    font-size: clamp(2.5rem, 6dvw, 4rem);
    font-weight: 600;
    color: var(--primary);
  }

  .description {
    font-size: 1.5rem;
    font-weight: 300;
  }

  .coming-soon {
    font-size: clamp(1.25rem, 2dvw, 1.5rem);
    padding: 0.5rem 1rem;
    color: var(--primary);
    border-color: var(--primary);
    border-width: 2px;
    border-style: solid;
    font-weight: 400;
    border-radius: 100rem;
    width: fit-content;
  }

  .steps {
    grid-column: main;
  }

  .types {
    display: grid;
    grid-template-columns: 1fr;
    grid-column: main;
    row-gap: 3rem;
    column-gap: 4rem;
  }

  @media screen and (min-width: 48rem) {
    .types {
      display: grid;
      grid-template-columns: 1fr 1fr;
      /* column-gap: 6rem; */
    }
  }

  @media screen and (min-width: 60rem) {
    .types {
      display: grid;
      grid-template-columns: 1fr 1fr;
      column-gap: 6rem;
    }
  }

  section {
    grid-column: main;
    display: grid;
    gap: 2rem;
  }
</style>
