---
import { getCollection } from "astro:content";

import MainLayout from "../layouts/main.astro";
import Signup from "../components/Signup.astro";
import Persona from "../components/Persona.astro";
import HowItWorks from "../components/HowItWorks.astro";
import AboutTheTeam from "../components/AboutTheTeam.astro";

const types = await getCollection("userTypes");
const userTypes = types.sort((a) => (a.data.type === "host" ? -1 : 1));
---

<MainLayout>
  <section class="intro-cta">
    <div class="intro" transition:animate="slide">
      <p class="coming-soon">Coming Soon!</p>
      <h1 class="title">Event planning made simple!</h1>
      <p class="description">
        From intimate gatherings to large soirees, all managed seemlessly to
        maximize your enjoyment.
      </p>
    </div>
    <div class="cta">
      <Signup />
    </div>
  </section>
  <section class="types">
    {
      userTypes.map((ut) => (
        <Persona
          title={ut.data.title}
          description={ut.data.description}
          img={ut.data.image}
        />
      ))
    }
  </section>
  <section>
    <HowItWorks />
  </section>
  <section>
    <AboutTheTeam />
  </section>

  <style>
    .intro-cta {
      display: grid;
      row-gap: 3rem;
      grid-column: lgutter / rgutter;
      grid-template-areas: var(--main-grid-template-areas);
      grid-template-columns: var(--main-grid-template-cols);
    }

    .intro {
      display: grid;
      grid-column: main;
      row-gap: 1.5rem;
    }

    .cta {
      grid-column: lgutter / rgutter;
    }

    @media screen and (max-width: calc(70rem - 1px)) {
      .cta {
        background-color: var(--primary-text);
        color: var(--white);
        padding-block: 4rem;
        display: grid;
        grid-template-areas: var(--main-grid-template-areas);
        grid-template-columns: var(--main-grid-template-cols);
      }

      :global(.cta > *) {
        grid-column: main;
      }
    }

    @media screen and (min-width: 70rem) {
      .intro-cta {
        grid-column: main;
        grid-template-columns: 1.5fr 1fr;
        row-gap: 2rem;
        column-gap: 6rem;
        align-self: flex-end;
      }

      .intro {
        grid-column: unset;
      }

      .cta {
        grid-column: unset;
      }
    }

    .title {
      font-size: 3rem;
      font-weight: 600;
    }

    .description {
      font-size: 1.25rem;
    }

    .coming-soon {
      font-size: 1.25rem;
      color: var(--secondary-text);
    }

    .steps {
      grid-column: main;
    }

    .types {
      display: grid;
      grid-template-columns: 1fr;
      grid-column: main;
      gap: 3rem;
    }
    
    @media screen and (min-width: 60rem) {
      .types {
        display: grid;
        grid-template-columns: 1fr 1fr;
        grid-column: main;
        gap: 3rem;
      }
    }

    section {
      grid-column: main;
    }

  </style>
</MainLayout>
